{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","target","rel","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","addMovieFromForm","name","value","test","setState","sendMovieFromForm","event","preventDefault","props","addMovie","this","onSubmit","type","onChange","required","placeholder","classNames","form__borderError","disabled","Component","App","moviesFromServer","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.073cdb5a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a\n          href={imdbUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classname';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  addMovieFromForm = ({ target }) => {\n    const { name, value } = target;\n\n    // eslint-disable-next-line max-len\n    const validate = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      if (!validate.test(value)) {\n        this.setState({ [name]: value });\n        // eslint-disable-next-line no-unused-expressions\n        (name === 'imgUrl')\n          ? this.setState({ imgUrlError: true })\n          : this.setState({ imdbUrlError: true });\n      } else {\n        this.setState({ [name]: value });\n        // eslint-disable-next-line no-unused-expressions\n        (name === 'imgUrl')\n          ? this.setState({ imgUrlError: false })\n          : this.setState({ imdbUrlError: false });\n      }\n    } else {\n      this.setState({ [name]: value });\n    }\n  }\n\n  sendMovieFromForm = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.addMovie(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      imgUrlError,\n      imdbUrlError,\n    } = this.state;\n\n    return (\n      <section className=\"new-movie\">\n        <h2>Add movie</h2>\n        <form\n          onSubmit={this.sendMovieFromForm}\n          className=\"new-movie__form form\"\n        >\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.addMovieFromForm}\n            required\n            placeholder=\"Movie title\"\n          />\n          <textarea\n            className=\"form__input\"\n            name=\"description\"\n            value={description}\n            onChange={this.addMovieFromForm}\n            required\n            placeholder=\"Description of the film\"\n          />\n          <input\n            className={classNames(`form__input`, {\n              form__borderError: imgUrlError === true,\n            })}\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            required\n            onChange={this.addMovieFromForm}\n            placeholder=\"Enter the Image URL\"\n          />\n          {imgUrlError\n            && (\n            <span className=\"form__error-img\">\n              Image URL entered incorrectly\n            </span>\n            )}\n          <input\n            className={classNames(`form__input`, {\n              form__borderError: imdbUrlError === true,\n            })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            required\n            onChange={this.addMovieFromForm}\n            placeholder=\"Enter the imdbUrl\"\n          />\n          {imdbUrlError\n          && (\n          <span className=\"form__error-imdb\">\n            ImdbUrl entered incorrectly\n          </span>\n          )}\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.addMovieFromForm}\n            required\n            placeholder=\"Enter the imdbId\"\n          />\n          <button\n            disabled={imgUrlError || imdbUrlError}\n            type=\"submit\"\n            className=\"form__btn\"\n          >\n            Add movie\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      ...state.movies.push(movie),\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}